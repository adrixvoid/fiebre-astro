---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import CustomGrid from "~/components/portfolio/CustomGrid.astro";
import { CardFooter, CardImage, CardTitle } from "~/components/ui/card";
import Container from "~/components/ui/container/Container.astro";
import Section from "~/components/ui/section/Section.astro";
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import Header from "../../components/Header.astro";
import Link from "~/components/ui/link/Link.astro";
import Text from "~/components/ui/text/Text.astro";

import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";

import styles from "~/layouts/PortfolioList.module.css";

const posts = (await getCollection("portfolio")).filter(p => !p.data.draft).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const links = [
  {
    label: "Ilustraciones",
    category: "illustration",
  },
  {
    label: "Branding",
    category: "branding",
  },
  {
    label: "Todo",
    category: "all",
    active: true,
  },
];

import localSVGStar from '../../../public/assets/star.svg';
import Article from "~/components/portfolio/Article.astro";
---

<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <Section marginBottom>
        <Container>
          <nav id="filter" class={styles.filter}>
            {
              links.map((link) => {
                return (
                    <span><Image src={localSVGStar} aria-hidden="true" alt="estrella" /></span>
                    <Text
                      class={{
                        active: link.active,
                      }}
                      variant="primary"
                      as={Link}
                      href={`#${link.category}`}
                      data-filter-by={link.category}
                      style={{ fontSize: "6cqw" }}
                    >
                      {link.label}
                    </Text>
                );
              })
            }
          </nav>
          <CustomGrid class={styles.grid}>
            {
              posts.map((post) => (
                <Article {...post} />
              ))
            }
          </CustomGrid>
        </Container>
      </Section>

      <Footer />
    </main>
  </body>
</html>
<script>
  const filter = document.getElementById("filter");
  const links = filter?.querySelectorAll("a");
  const posts = document?.querySelectorAll("article");

  function activate(link: HTMLAnchorElement) {
    const activeElement = filter?.querySelector(".active");
    activeElement?.classList.remove("active");
    link?.classList.add("active");
  }

  function hideElement(element: HTMLElement) {
    element.setAttribute("style", 'display: none');
  }

  function showElement(element: HTMLElement) {
    element.removeAttribute("style");
  }

  function filterBy(categorySelected?: string) {
    if (categorySelected === "all") {
      posts?.forEach((post) => {
        showElement(post);
      });
      return;
    }

    posts?.forEach((post) => {
      const categoriesOfPost = post.dataset.categories?.split(",");
      categoriesOfPost?.map((currentCategory) => {
        if (categorySelected === currentCategory) {
          showElement(post);
        } else {
          hideElement(post);
        }
      });
    });
  }

  links?.forEach((link) => {
    link.addEventListener("click", () => activate(link));
  });

  window.addEventListener('popstate', function (event) {
  filterBy(window.location.hash.replace('#', ''));
});
</script>

<style>
  .active {
    color: hsl(var(--color-brand3));
  }
</style>

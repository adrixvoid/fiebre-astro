---
import { getCollection, type CollectionEntry } from "astro:content";

import { Image } from "astro:assets";

import Container from "~/components/ui/container/Container.astro";
import Section from "~/components/ui/section/Section.astro";
import Link from "~/components/ui/link/Link.astro";
import Article from "~/components/portfolio/Article.astro";
import Grid from "~/components/ui/grid/Grid.astro";
import Title from "~/components/ui/text/Title.astro";

import { PORTFOLIO_FILTERS } from "../../consts";

import localSVGStar from '../../../public/assets/star.svg';

import styles from "~/components/portfolio/PortfolioList.module.css";
import PortfolioLayout from "~/layouts/PortfolioLayout.astro";

export function getStaticPaths() {
  let allParams = [{
      params: {
        category: '',
      },
      props: {}
    }];

  for (const filter of PORTFOLIO_FILTERS) {
    allParams.push({
      params: { category: filter.category },
      props: filter,
    });
  };

  return allParams;
}

const {category} = Astro.params;

const posts = await getCollection("portfolio", ({ data }: CollectionEntry<"portfolio">) => {
  if (category) {
    return !data.draft && data.categories.includes(category)
  } else {
    return !data.draft
  }
});

const filtered:CollectionEntry<"portfolio">[] = posts.sort(
  (a: CollectionEntry<"portfolio">, b: CollectionEntry<"portfolio">) => a.data.pubDate && b.data.pubDate ? b.data.pubDate.valueOf() - a.data.pubDate.valueOf() : 0
)
---

<PortfolioLayout>
  <Section marginBottom>
    <Container variant="fluid">
      <nav id="filter" class={styles.filter}>
        {
          PORTFOLIO_FILTERS.map((filter) => {
            console.log("category", category)
            return (
                <span><Image src={localSVGStar} aria-hidden="true" alt="estrella" /></span>
                <Title
                  class={{
                    active: category ? category === filter.category : filter.category === '.',
                  }}
                  variant="primary"
                  as={Link}
                  href={`/portfolio/${filter.category}`}
                  data-filter-by={filter.category}
                  style={{ fontSize: "6cqw" }}
                >
                  {filter.label}
                </Title>
            );
          })
        }
      </nav>
      <Grid class={styles.grid}>
        {
          filtered.map((post) => (
            <Article class={styles.article} {...post} />
          ))
        }
      </Grid>
    </Container>
  </Section>
</PortfolioLayout>
<style>
  .active {
    color: hsl(var(--color-brand3));
    scale: 1.1;
  }
</style>

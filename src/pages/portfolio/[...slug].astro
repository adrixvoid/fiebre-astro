---
import { getCollection, type CollectionEntry } from "astro:content";
import { ViewTransitions } from "astro:transitions";

import BaseHead from "~/components/BaseHead.astro";
import Footer from "~/components/Footer.astro";
import MainHeader from "~/components/MainHeader.astro";
import RelatedPosts from "~/components/portfolio/RelatedPosts.astro";
import Container from "~/components/ui/container/Container.astro";
import Title from "~/components/ui/text/Title.astro";

import "~/components/portfolio/MarkdownContent.css";
import style from "~/components/portfolio/PortfolioDetail.module.css";
import Center from "~/components/ui/center/Center.astro";
import Button from "~/components/ui/button/Button.astro";
import Icon from "~/components/ui/icon/Icon.astro";

type Props = {
  post: CollectionEntry<"portfolio">;
  posts: CollectionEntry<"portfolio">[];
};

export async function getStaticPaths() {
  const posts = (await getCollection(
    "portfolio"
  )) as CollectionEntry<"portfolio">[];
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post, posts },
  }));
}

function shuffle<Type>(array: Type[]) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
  return array;
}

// type Props = CollectionEntry<"portfolio">["data"];
// const { title, description, preview, background, color } = Astro.props;
// const related = getPostsPerCategory(posts, post.data.categories)

const { post, posts } = Astro.props;

const shuffled = shuffle<(typeof posts)[0]>(
  posts.filter((r) => r.id !== post.id)
);

const related = shuffled.slice(0, 9);
const { Content, ...rest } = await post.render();
console.log("rest", rest);
---

<html lang="en">
  <head>
    <BaseHead
      title={post.data.title}
      description={post.data.description || ""}
      image={post.data.preview}
    />
    <ViewTransitions />
  </head>

  <body
    style={{
      backgroundColor: post.data.background,
      color: post.data.color || "inherit",
    }}
  >
    <MainHeader />
    <main>
      <article class={style.content} transition:name="article">
        <Container class={style.container} variant="fluid">
          <Button variant="link" class="back" onclick="history.back()">
            <Icon icon="back" size="24px" /> Volver
          </Button>

          <div class={style.prose}>
            <div class={style.title}>
              <Title transition:name="title">
                {post.data.title}
              </Title>
            </div>
            <div>
              <div class="markdown">
                <Content />
              </div>
              <Center variant="text" style={{ marginBlock: "4rem 2.5rem" }}>
                <Title as="h4" size="md">Ver m√°s proyectos</Title>
              </Center>
              <RelatedPosts posts={related} style="margin-bottom: 1rem" />
            </div>
          </div>
          <Button variant="link" class="back" onclick="history.back()">
            <Icon icon="back" size="24px" /> Volver
          </Button>
        </Container>
      </article>
    </main>
    <Footer />
  </body>
</html>

---
import type { HTMLAttributes } from "astro/types";
import { buttonVariants, type ButtonVariants } from "./Button.cva";

export type ButtonProps = ButtonVariants & {
  asLink?: boolean;
  class?: string;
} & (HTMLAttributes<"a"> | HTMLAttributes<"button">);

const {
  asLink,
  variant,
  size,
  width,
  class: className = "",
  ...props
} = Astro.props as ButtonProps;
---

{
  asLink ? (
    <a
      class={buttonVariants({ variant, size, width, className })}
      {...(props as HTMLAttributes<"a">)}
    >
      <slot />
    </a>
  ) : (
    <button
      class={buttonVariants({ variant, size, width, className })}
      {...(props as HTMLAttributes<"button">)}
    >
      <slot />
    </button>
  )
}
